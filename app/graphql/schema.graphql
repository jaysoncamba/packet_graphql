# Autogenerated input type of CreateDevice
input CreateDeviceInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  facilityCode: String!
  operatingSystemSlug: String!
  planSlug: String!
  projectId: String!
}

# DateTime in ISO 8601 format("yyyy-mm-ddThh:mm:ssZ").
#
# Ex. "Wed, 11 Apr 2018 06:23:15 UTC +00:00" when encoded to iso8601
#
# looks like "2018-04-11T06:23:40Z"
scalar DateTime

# Autogenerated input type of DeleteDevice
input DeleteDeviceInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  deviceId: String!
}

# Device packet object
type Device {
  createdAt: DateTime
  facility: Facility
  hostname: String
  id: String
  ipAddresses: [object]
  iqn: String
  operatingSystem: OperatingSystem
  plan: Plan
  project: Project
  state: String
  tags: [String]
  updatedAt: DateTime
}

# The connection type for Device.
type DeviceConnection {
  # A list of edges.
  edges: [DeviceEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type DeviceEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Device
}

# Facility packet object
type Facility {
  code: String
  features: [String]
  id: String
  name: String
}

# The connection type for Facility.
type FacilityConnection {
  # A list of edges.
  edges: [FacilityEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type FacilityEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Facility
}

type Mutation {
  # Create Device for a Project
  createDevice(input: CreateDeviceInput!): Device

  # Delete Device by ID
  deleteDevice(input: DeleteDeviceInput!): SuccessResponse
}

# Operating system available for packet
type OperatingSystem {
  distro: String
  id: String
  name: String
  provisionableOn: [String]
  slug: String
  version: String
}

# The connection type for OperatingSystem.
type OperatingSystemConnection {
  # A list of edges.
  edges: [OperatingSystemEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type OperatingSystemEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: OperatingSystem
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, the cursor to continue.
  endCursor: String

  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String
}

# Operating system available for packet
type Plan {
  description: String
  id: String
  line: String
  name: String
  pricing: object
  slug: String
  specs: [object]
}

# The connection type for Plan.
type PlanConnection {
  # A list of edges.
  edges: [PlanEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type PlanEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Plan
}

# Project packet object
type Project {
  createdAt: DateTime
  devices(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
  ): Device
  id: String
  updatedAt: DateTime
}

type Query {
  # List of all available Operating System
  operatingSystems(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
  ): OperatingSystemConnection

  # Get Project device by ID
  projectDevice(deviceId: String!): Device

  # List all devices in a project
  projectDevices(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
    projectId: String!
  ): DeviceConnection

  # List of the project available facilities
  projectFacilities(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
    projectId: String!
  ): FacilityConnection

  # List of all available plan from project
  projectPlans(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
    projectId: String!
  ): PlanConnection
}

# A successful response
type SuccessResponse {
  success: Boolean!
}

# scalar type object that returns as is
scalar object